<div id="app" class="container mx-auto p-4">
  <h1 class="text-2xl mb-4">Spotify Playlist Track Fetcher</h1>

  <div class="mb-4">
    <input
      type="text"
      v-model="playlistUrl"
      placeholder="Enter Spotify playlist URL"
      class="p-2 border rounded w-full"
    >
    <button
      @click="fetchTracks"
      class="mt-2 bg-green-500 text-white px-4 py-2 rounded"
    >
      Fetch Tracks
    </button>
  </div>

  <div v-if="loading" class="text-gray-600">
    Loading...
  </div>

  <div v-if="tracks.length > 0">
    <h2 class="text-xl mb-2">Tracks:</h2>
    <ul class="list-disc pl-4">
      <li v-for="track in tracks" :key="track.name" class="mb-2">
        {{ track.artist }} - {{ track.name }}
      </li>
    </ul>
  </div>

  <div v-if="error" class="text-red-500 mt-4">
    {{ error }}
  </div>
</div>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', () => {
    const { createApp } = Vue

    const app = createApp({
      data() {
        return {
          playlistUrl: '',
          tracks: [],
          error: null,
          loading: false
        }
      },
      methods: {
        async fetchTracks() {
          this.loading = true
          this.error = null

          try {
            const response = await fetch('/fetch_tracks', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
              },
              body: JSON.stringify({ playlist_url: this.playlistUrl })
            })

            const data = await response.json()

            if (response.ok) {
              this.tracks = data.tracks
            } else {
              this.error = data.error
            }
          } catch (e) {
            this.error = 'Failed to fetch tracks'
          } finally {
            this.loading = false
          }
        }
      }
    })

    app.mount('#app')
  })
<% end %>
